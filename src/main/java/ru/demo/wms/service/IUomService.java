package ru.demo.wms.service;

import java.util.List;
import java.util.Map;

import ru.demo.wms.model.Uom;

public interface IUomService {

	Integer saveUom(Uom uom);
	void updateUom(Uom uom);
	void deleteUom(Integer id);
	
	Uom getOneUom(Integer id);
	List<Uom> getAllUoms();
	boolean isUomModelExist(String uomModel);
	boolean isUomModelExistForEdit(String uomModel,Integer id);
	
	Map<Integer,String> getUomIdAndModel();
	

}
/*
Интерфейс IUomService определяет функциональность сервисного слоя для управления единицами измерения (Units of Measurement - UoM) в системе управления складом или логистикой. Единицы измерения являются критически важными для точного отслеживания запасов, выполнения заказов и управления процессами поставки. Давайте подробнее рассмотрим предложенные методы:

Основные методы интерфейса IUomService:
saveUom(Uom uom):
Сохраняет новую единицу измерения в базе данных или обновляет существующую, если она уже присутствует. Возвращает идентификатор сохраненной или обновленной единицы измерения.

updateUom(Uom uom):
Обновляет детали существующей единицы измерения. Этот метод предполагает, что объект Uom уже содержит идентификатор существующей записи.

deleteUom(Integer id):
Удаляет единицу измерения из базы данных по её идентификатору. Это необратимая операция, которая должна выполняться с осторожностью.

getOneUom(Integer id):
Возвращает объект Uom, соответствующий указанному идентификатору. Если такой единицы измерения не существует, может потребоваться генерация исключения.

getAllUoms():
Возвращает список всех единиц измерения, доступных в системе. Этот метод может быть использован для отображения единиц измерения в пользовательском интерфейсе.

isUomModelExist(String uomModel):
Проверяет, существует ли уже единица измерения с указанной моделью (или названием). Это важно для предотвращения дублирования единиц измерения при их добавлении.

isUomModelExistForEdit(String uomModel, Integer id):
Похож на предыдущий метод, но позволяет исключить из проверки текущую запись по идентификатору. Это полезно при обновлении существующих единиц измерения, чтобы избежать ложных срабатываний проверки уникальности.

getUomIdAndModel():
Возвращает карту, где ключом является идентификатор единицы измерения, а значением - её название (модель). Это может быть использовано для построения выпадающих списков или других элементов выбора в пользовательском интерфейсе.

Рекомендации для реализации:
Валидация входных данных: Важно обеспечить тщательную проверку входных данных на всех этапах работы с единицами измерения, чтобы предотвратить сохранение некорректной или дублирующей информации.

Обработка исключений: При разработке реализации сервиса следует корректно обрабатывать исключительные ситуации, например, попытку удаления несуществующей единицы измерения или обращение к несуществующему объекту.

Оптимизация запросов: При реализации методов, особенно таких, как getAllUoms и getUomIdAndModel, важно обеспечить эффективность выполнения запросов к базе данных, чтобы минимизировать время отклика и нагрузку на систему.

Реализация интерфейса IUomService обеспечит централизованное и эффективное управление единицами измерения в системе, что является фундаментальным для точного ведения учета, выполнения заказов и управления запасами.
*/